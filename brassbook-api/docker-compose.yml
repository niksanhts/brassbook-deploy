version: '3.8'

services:
  minio:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - ./minio/init.sh:/init/init.sh
    entrypoint: ["/bin/sh", "/init/init.sh"]
    networks:
      - app-network

  postgres:
    image: postgres:14-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  app:
    build:
      context: .
    env_file:
      - .env
    environment:
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - .:/app
      - /app/venv
    tty: true
    stdin_open: true
    depends_on:
      - postgres
      - minio
    networks:
      - app-network
    ports:
      - "8000:8000"

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - app
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  minio_data:
  postgres_data:
